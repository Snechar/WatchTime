// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using video_service.Context;

namespace video_service.Migrations
{
    [DbContext(typeof(VideoContext))]
    [Migration("20220512201709_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("video_service.Model.ChannelModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChannelId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.ToTable("channelModels");
                });

            modelBuilder.Entity("video_service.Model.CommentModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VideoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VideoModelId");

                    b.ToTable("CommentModel");
                });

            modelBuilder.Entity("video_service.Model.LikeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReplyModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VideoModelID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CommentModelId");

                    b.HasIndex("ReplyModelId");

                    b.HasIndex("UserId");

                    b.HasIndex("VideoModelID");

                    b.ToTable("LikeModel");
                });

            modelBuilder.Entity("video_service.Model.QualityVotesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("VideoModelId")
                        .HasColumnType("int");

                    b.Property<string>("VideoModelId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("VideoModelId1");

                    b.ToTable("QualityVotesModel");
                });

            modelBuilder.Entity("video_service.Model.ReplyModel", b =>
                {
                    b.Property<string>("ReplyModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CommentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("ReplyText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ReplyModelId");

                    b.HasIndex("CommentModelId");

                    b.HasIndex("UserId");

                    b.ToTable("ReplyModel");
                });

            modelBuilder.Entity("video_service.Model.UserModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("userModels");
                });

            modelBuilder.Entity("video_service.Model.VideoModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChannelModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<double>("Quality")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ChannelModelId");

                    b.ToTable("videoModels");
                });

            modelBuilder.Entity("video_service.Model.ChannelModel", b =>
                {
                    b.HasOne("video_service.Model.UserModel", "Channel")
                        .WithMany()
                        .HasForeignKey("ChannelId");

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("video_service.Model.CommentModel", b =>
                {
                    b.HasOne("video_service.Model.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("video_service.Model.VideoModel", null)
                        .WithMany("Comments")
                        .HasForeignKey("VideoModelId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("video_service.Model.LikeModel", b =>
                {
                    b.HasOne("video_service.Model.CommentModel", null)
                        .WithMany("LikeList")
                        .HasForeignKey("CommentModelId");

                    b.HasOne("video_service.Model.ReplyModel", null)
                        .WithMany("LikeList")
                        .HasForeignKey("ReplyModelId");

                    b.HasOne("video_service.Model.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("video_service.Model.VideoModel", null)
                        .WithMany("LikeList")
                        .HasForeignKey("VideoModelID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("video_service.Model.QualityVotesModel", b =>
                {
                    b.HasOne("video_service.Model.VideoModel", null)
                        .WithMany("QualityVotes")
                        .HasForeignKey("VideoModelId1");
                });

            modelBuilder.Entity("video_service.Model.ReplyModel", b =>
                {
                    b.HasOne("video_service.Model.CommentModel", null)
                        .WithMany("Replies")
                        .HasForeignKey("CommentModelId");

                    b.HasOne("video_service.Model.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("video_service.Model.VideoModel", b =>
                {
                    b.HasOne("video_service.Model.UserModel", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("video_service.Model.ChannelModel", null)
                        .WithMany("Videos")
                        .HasForeignKey("ChannelModelId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("video_service.Model.ChannelModel", b =>
                {
                    b.Navigation("Videos");
                });

            modelBuilder.Entity("video_service.Model.CommentModel", b =>
                {
                    b.Navigation("LikeList");

                    b.Navigation("Replies");
                });

            modelBuilder.Entity("video_service.Model.ReplyModel", b =>
                {
                    b.Navigation("LikeList");
                });

            modelBuilder.Entity("video_service.Model.VideoModel", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("LikeList");

                    b.Navigation("QualityVotes");
                });
#pragma warning restore 612, 618
        }
    }
}
